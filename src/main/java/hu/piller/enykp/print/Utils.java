package hu.piller.enykp.print;

import hu.piller.enykp.datastore.Elem;
import hu.piller.enykp.gui.model.BookModel;
import hu.piller.enykp.gui.model.DataFieldModel;
import hu.piller.enykp.gui.model.PageModel;
import hu.piller.enykp.interfaces.IDataStore;
import hu.piller.enykp.util.base.Tools;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.util.Hashtable;
import java.util.Vector;

public class Utils {
   public static final byte[] ICON_PRINT = new byte[]{71, 73, 70, 56, 57, 97, 32, 0, 32, 0, -9, -6, 0, -83, -83, -59, -81, -81, -57, -103, -92, -43, 118, 119, -95, -116, -116, -97, -88, -88, -65, -52, -26, -1, -59, -30, -1, -70, -40, -5, -120, -116, -59, 111, 112, -116, -106, -106, -85, -84, -84, -61, -49, -25, -1, -65, -34, -1, -73, -38, -1, -92, -63, -18, 121, 122, -81, 120, 120, -119, -94, -94, -72, -58, -29, -1, -63, -32, -1, -72, -36, -1, -80, -41, -1, -86, -44, -1, -118, -106, -50, 104, 104, -122, -113, -113, -93, -48, -25, -1, -55, -29, -1, -70, -35, -1, -78, -39, -1, -92, -47, -1, -105, -70, -18, 116, 116, -124, -46, -23, -1, -53, -27, -1, -67, -34, -1, -76, -39, -1, -84, -42, -1, -89, -45, -1, -97, -49, -1, -103, -53, -1, -125, -118, -59, 96, 97, 118, -109, -109, -89, -81, -41, -1, -96, -49, -1, -110, -57, -1, -121, -97, -39, 100, 100, -121, -127, -127, -109, -102, -52, -1, -109, -55, -1, -116, -59, -1, -122, -79, -18, 111, 112, -98, 110, 110, 125, -97, -97, -75, -122, -120, -63, -94, -48, -1, -99, -51, -1, -106, -54, -1, -121, -62, -1, -126, -69, -5, 124, 125, -75, 93, 93, 106, -127, -126, -72, -68, -39, -5, -113, -58, -1, -120, -62, -1, -125, -64, -1, -127, -65, -1, -128, -124, -83, 107, 107, 115, 127, 126, -123, -121, -122, -118, -120, -121, -111, -109, -110, -94, -92, -92, -69, -123, -123, -73, -85, -59, -18, -118, -60, -1, 111, -98, -43, 82, 87, 109, 98, 94, 107, -70, -70, -70, -67, -67, -66, -74, -74, -73, -119, -120, -117, -108, -108, -87, -121, -120, -74, -89, -62, -18, 126, -83, -29, 96, -127, -81, 72, 89, 125, 47, 47, 70, 45, 41, 62, 55, 53, 71, 73, 70, 87, -127, -128, -119, -50, -50, -50, -47, -47, -46, -54, -54, -54, -107, -109, -104, 124, 123, 127, -118, -119, -103, -102, -103, -87, -125, -126, -118, -106, -87, -59, 123, -98, -55, 85, 103, -119, 59, 65, 91, 43, 40, 60, 52, 48, 67, 66, 63, 81, 88, 86, 102, 116, 114, 125, -118, -119, -110, -97, -98, -92, -81, -82, -80, -53, -53, -53, -84, -84, -83, 127, 127, -116, -99, -99, -78, -87, -87, -85, -49, -50, -48, -124, -118, -89, 76, 85, 114, 48, 45, 65, 61, 57, 76, 80, 77, 94, 107, 104, 117, -103, -104, -99, -75, -75, -74, -85, -86, -84, -104, -105, -99, -69, -69, -68, -124, -125, -121, 122, 122, -125, -103, -103, -82, -40, -41, -38, 85, 82, 98, 99, 95, 109, 123, 121, -124, -110, -111, -104, -91, -92, -87, -78, -79, -76, 111, 109, 121, 101, 99, 111, -96, -97, -91, -58, -58, -58, 114, 113, 118, 122, 122, -117, -18, -18, -17, -112, -113, -105, 119, 118, -127, -84, -85, -80, -43, -43, -43, -45, -45, -45, -52, -52, -51, -64, -64, -63, 108, 108, 109, 99, 99, 113, -21, -21, -19, 101, 100, 114, 87, 84, 100, -32, -32, -31, -35, -35, -35, -38, -38, -38, -40, -40, -40, -89, -89, -87, -97, -97, -95, -105, -105, -103, 112, 111, 115, 91, 91, 104, -13, -13, -12, -22, -22, -21, -73, -74, -70, -25, -25, -23, -27, -27, -26, -30, -30, -29, -100, -102, -98, -116, -117, -114, -127, -128, -125, -109, -110, -106, 127, 126, -126, 87, 87, 98, -14, -14, -13, -16, -16, -16, -117, -118, -114, 117, 116, 118, 61, 60, 62, -99, -99, -97, -17, -17, -16, -67, -67, -64, -111, -112, -109, 106, 105, 108, 51, 50, 52, 3, 3, 3, 0, 0, 0, 91, 91, 97, -62, -62, -59, -107, -107, -105, -115, -116, -113, 67, 67, 69, 20, 20, 20, 101, 100, 103, 96, 95, 101, 80, 80, 89, 127, 127, -111, -89, -89, -66, -112, -113, -110, 77, 76, 78, 13, 13, 14, 43, 43, 43, 121, 120, 124, -114, -114, -95, -86, -86, -63, -113, -114, -111, 110, 109, 114, -123, -123, -109, -53, -53, -52, -125, -125, -107, 102, 102, 106, 99, 99, 103, 75, 75, 83, 85, 85, 96, -96, -96, -74, 119, 119, 121, -41, -41, -41, -79, -79, -78, 93, 92, 97, 71, 71, 78, 83, 83, 95, 118, 118, -121, -121, -121, -102, 53, 53, 56, 45, 45, 50, -38, -38, -36, 71, 71, 81, 106, 106, 120, -112, -112, -93, 74, 74, 84, 98, 98, 111, 123, 122, 126, -112, -112, -92, 114, 114, -126, 89, 89, 102, -85, -85, -61, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 33, -7, 4, 1, -24, 3, -6, 0, 44, 0, 0, 0, 0, 32, 0, 32, 0, 0, 8, -1, 0, -11, 9, 28, 72, 80, 32, -128, 0, 8, 19, 6, 40, -56, -80, -31, 64, 1, 3, 8, 20, 80, 72, 113, -95, -61, -122, 6, 14, 32, 72, -96, 96, 1, -125, -118, 20, 47, 18, 108, 112, -64, -63, 3, 8, 17, 36, 76, 0, 25, 82, 100, 3, 10, 21, 44, 92, -64, -112, 65, -61, -122, -113, 44, 19, 94, -28, -48, -95, -126, -121, 15, 24, 64, -124, -120, 32, 98, 101, 78, -99, 12, 71, -112, -88, 80, -62, -60, 9, 20, 41, 84, -84, 96, -47, -30, -32, 81, -124, 5, -107, 30, 104, -22, 2, -59, 11, 21, 48, 98, -56, -104, 49, -15, 42, -42, -127, 25, 75, 60, -104, -7, -126, 70, 13, 27, 55, 112, -28, -48, 97, -10, -84, -66, 29, 48, 101, 98, -32, -47, -61, -121, -115, 31, 64, -126, 8, 89, 80, -9, -20, 16, 34, 63, -125, -10, 45, 98, -28, 8, -110, 36, 74, -106, 48, 105, -30, -28, 9, 78, -106, 2, -95, 68, 113, 10, -43, 7, 12, 41, -114, -89, 80, -87, 98, -27, 10, -106, 44, 75, -76, 20, -80, 90, 81, 95, -128, 45, 92, -98, -10, 0, -37, -59, -53, 23, 48, 97, -60, -116, 33, 83, -58, -52, 25, 52, 105, -44, 60, 97, 77, 113, 13, -101, 54, 40, 120, -72, 121, 3, 39, -114, -100, 57, 116, -22, -40, -71, -125, 7, 79, -98, 50, 121, -12, -92, -39, -61, -25, -78, -62, 62, 126, -2, 0, -1, -118, 19, 72, -48, 32, 66, 108, 10, -11, 49, 100, -24, 16, 34, 50, 104, -80, -97, 73, -92, 104, 17, 35, -17, 103, 27, 57, 122, 4, 41, -110, -92, 73, -122, -32, 113, 71, 19, -108, 84, -78, -120, 37, -105, -56, 119, 6, 22, -104, 100, 98, -108, 66, 3, 105, -126, -121, 33, -109, 72, -78, 9, 39, -113, 84, -46, 68, 39, 102, 120, -14, -119, 31, -96, -100, 17, 10, 30, -123, -120, 50, 10, 35, -83, 13, 68, 74, 33, -91, -104, 66, -55, 38, 126, -100, -126, 74, 42, -86, 120, -30, -101, 21, -85, -80, -46, -118, 34, -82, -68, -94, 69, -118, 2, -63, 18, -117, 44, -88, -52, 66, 75, 45, 50, -90, 2, -54, 21, 125, -80, -62, -118, 45, -73, -32, -110, -117, 46, -69, -76, 80, 17, 47, 3, -63, -46, 11, 41, -79, 24, -119, -54, -126, 57, 58, -39, -118, 47, -65, 0, 19, 12, 43, 76, -20, 66, 0, 113, 11, -51, 34, 16, 47, -62, -52, 98, -58, 48, 122, 56, -23, -92, 45, -60, 40, 82, -116, 49, -57, 32, 19, 76, 48, -118, 36, 67, 22, -124, -6, -8, -30, -121, 39, -54, 116, 98, -25, -109, -53, 48, -93, -56, 47, -51, 56, -125, -52, -92, -56, 60, -125, 11, 52, -47, 72, 51, 13, -95, -52, -8, -46, -54, 50, -44, 80, -29, 11, 19, -72, -4, 82, -115, 49, -42, 80, -118, -52, 53, -94, -32, -120, 77, 50, 66, 100, -71, -93, 13, -95, -6, -28, -62, -60, 54, -72, 114, -29, 76, -97, -86, -78, 106, -59, 25, -64, -118, 72, 12, 54, -35, 76, -128, 19, 65, -34, 44, -54, 74, -81, -83, 6, 27, 108, 40, -85, -36, -110, 5, 27, -33, 60, 97, -105, 64, -54, -82, -38, 106, 30, 121, -128, 82, -122, 31, 126, 92, -94, 7, 51, -70, -128, 19, -114, 56, -29, 100, 66, -114, 69, 5, 57, -71, -116, 47, -27, -24, -31, -119, 57, -86, -92, -126, -118, 31, -25, 80, -13, 11, 58, -23, -92, -93, -50, 40, -21, -80, -61, 72, 1, 23, -31, -14, 76, 59, -18, 112, 67, -115, 25, -17, -56, 66, -52, -66, -23, -64, 51, 78, 60, -46, -56, -61, -56, 4, -38, 0, 32, -110, 62, -13, -88, 67, 79, 60, 74, -44, 3, -79, -60, 20, -37, -61, -57, 52, -84, 109, 44, -112, 61, -116, -16, 33, -49, 61, -8, -32, 83, 50, 31, -85, -75, -92, -78, 64, 1, -28, -93, -125, 22, 90, -100, -52, 38, -69, 55, 23, -124, -39, -58, 1, 1, 0, 59};
   public static final byte[] ICON_CANCEL = new byte[]{71, 73, 70, 56, 57, 97, 32, 0, 32, 0, -9, -2, 0, -81, -81, -57, -86, -86, -63, -93, -95, -73, -92, -93, -71, -85, -85, -61, -82, -82, -58, -105, -107, -86, -88, -89, -66, -98, 117, 127, -37, 53, 33, -65, 70, 60, -109, -121, -104, -89, -89, -66, -29, 42, 17, -111, 89, 92, -104, -106, -86, -83, -83, -59, -87, -95, -74, -61, 112, 113, -34, 48, 25, -39, 32, 5, -119, 64, 60, 124, 118, -123, -99, -99, -77, -6, 31, 1, -32, 42, 17, -114, 91, 96, -90, -100, -80, -55, 102, 99, -40, 32, 5, -109, 47, 36, 94, 77, 85, 123, 123, -116, -95, -95, -73, -24, 38, 13, -7, 31, 1, -9, 31, 1, -36, 42, 20, -116, 94, 100, -103, -105, -84, -84, -84, -61, -94, -108, -89, -53, 94, 88, -28, 34, 6, -39, 31, 4, -108, 44, 31, 91, 71, 78, 109, 109, 124, -107, -107, -86, -95, 80, 79, -26, 38, 14, -10, 31, 1, -11, 31, 1, -40, 42, 21, -118, 96, 103, -103, -104, -83, -101, -120, -104, -46, 79, 68, -27, 30, 1, -43, 32, 6, -107, 42, 30, 91, 69, 74, 108, 107, 122, -110, -110, -89, -88, -88, -65, -87, -87, -64, -109, -116, -97, -97, 80, 79, -36, 40, 18, -14, 31, 1, -13, 31, 1, -44, 44, 22, -120, 98, 106, -101, -102, -81, -107, -128, -114, -39, 60, 42, -26, 30, 1, -48, 33, 7, -116, 45, 34, 90, 70, 76, -111, -111, -91, -109, -114, -96, -106, 86, 87, -45, 43, 21, -16, 31, 1, -17, 31, 1, -46, 44, 23, -121, 100, 108, -100, -101, -79, -90, -93, -72, -65, 124, -126, -34, 51, 28, -46, 32, 7, -120, 44, 34, 86, 73, 81, 111, 111, 126, -107, -112, -93, -107, 88, 90, -19, 31, 1, -18, 31, 1, -49, 45, 24, -122, 100, 108, -69, 104, 105, -32, 46, 21, -43, 31, 5, -118, 42, 31, 113, 113, -128, -105, -110, -91, -105, 88, 89, -48, 43, 21, -22, 32, 2, -20, 31, 1, -21, 31, 1, -46, 42, 20, -29, 36, 7, -115, 41, 29, 85, 71, 78, -113, 90, 94, -59, 45, 26, -25, 32, 3, -22, 31, 1, -24, 31, 1, -25, 31, 1, -32, 30, 2, 83, 69, 76, -108, -108, -87, -102, -109, -89, -84, 73, 67, -30, 35, 7, -37, 30, 3, 110, 50, 46, 102, 102, 116, -88, -91, -68, -90, 124, -122, -57, 62, 46, -28, 30, 1, -33, 30, 2, -78, 41, 23, 122, 92, 100, -101, -101, -79, -84, -84, -60, -89, -93, -71, -80, 116, 122, -37, 61, 42, -26, 34, 6, -56, 32, 8, -31, 30, 2, -36, 31, 4, -77, 50, 36, -123, 110, 121, -94, -94, -72, -93, -97, -76, -80, 108, 112, -34, 54, 32, -106, 38, 24, 107, 52, 50, -70, 40, 21, -39, 31, 5, -81, 54, 41, -123, 112, 124, -99, -105, -85, -81, 93, 93, -32, 49, 26, -40, 31, 4, -107, 38, 25, 87, 62, 67, 98, 97, 110, 123, 96, 105, -60, 44, 25, -35, 30, 2, -36, 30, 2, -86, 55, 44, -122, 114, 126, -93, -94, -72, -88, -109, -92, -81, 82, 77, -123, 41, 31, 88, 66, 71, 105, 105, 119, -114, -114, -95, -102, -102, -81, -124, 104, 114, -72, 49, 32, -39, 29, 2, -90, 56, 46, -122, 116, -127, -92, -92, -69, -84, -117, -104, -46, 79, 67, -27, 37, 10, -121, 39, 29, 85, 68, 74, -90, -90, -67, -98, -98, -76, -82, 54, 41, -40, 29, 2, -41, 29, 2, -49, 32, 8, -93, 58, 49, -122, 118, -124, -39, 65, 48, -118, 40, 28, 85, 67, 73, -97, -98, -76, -42, 29, 2, -43, 29, 2, -51, 32, 8, -95, 59, 50, -122, 120, -121, -91, -91, -68, -24, 32, 3, -38, 31, 4, -114, 38, 27, 84, 66, 71, -109, -109, -89, -96, -97, -75, -121, 113, 126, -44, 29, 2, -96, 60, 52, -121, 123, -117, -109, 38, 25, 107, 107, 121, -99, 60, 52, -48, 30, 4, -120, 127, -114, -105, 38, 24, 83, 64, 69, -119, 121, -120, -95, 62, 53, -97, 61, 53, -118, -126, -110, 83, 63, 68, 104, 103, 117, -112, -112, -92, -117, 123, -119, -91, 60, 51, -47, 30, 3, -97, 62, 54, -117, -122, -104, -113, -113, -93, -116, 122, -120, -93, 61, 52, -52, 32, 7, -50, 32, 7, -114, -117, -99, -104, 63, 56, -51, 32, 7, -49, 31, 6, 110, 101, 113, -114, -122, -105, -50, 31, 6, -67, 31, 9, -115, -116, -97, 108, 103, 117, -1, -1, -1, 0, 0, 0, 33, -7, 4, 1, -24, 3, -2, 0, 44, 0, 0, 0, 0, 32, 0, 32, 0, 0, 8, -1, 0, -3, 9, 28, 72, 80, 32, -128, -125, 8, 15, 22, 92, -56, 112, 96, -62, -121, 15, 27, 54, -124, 72, 49, -94, 68, -121, 21, 31, 6, 16, 48, -128, 64, 1, 0, 23, -3, 25, 8, -112, -15, 96, -127, 3, 8, 18, 40, 88, -64, -32, -93, -60, 6, 14, 30, 16, -56, 8, 33, -126, -124, 9, 20, 42, 88, -72, 0, 65, -31, 66, 12, 24, 50, 104, -112, 73, 17, -62, 6, 14, 25, 58, 120, -8, 0, 34, 68, 79, -97, 3, 69, 96, 24, 65, -94, -124, -119, 19, 51, 19, -94, 72, -95, 98, 5, -117, 22, 46, 94, -64, 32, -103, -112, 96, 12, 25, 36, 102, -48, -88, 97, -29, 6, 10, -124, 4, 112, -28, -48, -79, -125, 71, 15, 31, 63, -128, 124, 44, 43, 48, -120, -112, 33, 68, -118, 24, 41, 114, 4, 73, -110, -73, 1, -108, 44, 97, -46, -60, -55, 19, 31, 80, -12, 82, 20, 88, 0, 72, 20, 41, 83, -88, 80, -87, 98, -27, 10, -106, 44, 90, -74, 48, -31, -46, -59, -53, -105, -68, 123, 33, 26, -84, 12, 38, -52, 20, 49, 99, -60, -112, 41, 99, -26, 12, 19, 52, 105, -68, -88, -127, 33, -71, -94, 63, -124, 5, 2, -84, 97, -45, -58, -51, 27, 56, 113, -28, 48, -23, 48, -121, -50, 23, 24, 65, 82, -105, 52, 41, -68, -114, -99, 59, 120, -14, -24, -39, 51, -121, -49, -105, 62, -47, -89, 67, -1, 12, -18, -25, 15, 32, -19, 76, 2, 9, 26, -124, 90, 60, 69, 66, -123, 12, -83, -48, -61, -28, 16, -94, 68, -118, 22, 49, 114, 15, -79, -111, -93, 71, -112, 108, 23, -55, 30, -110, 76, 66, 73, 37, -106, 60, -59, 31, 0, -105, 96, -110, -55, 29, -37, 105, -78, 9, 39, 123, 32, -46, -119, 39, -97, 36, -72, 32, 40, -95, -120, -94, -35, 40, -92, -108, 98, -54, 41, -88, -92, -94, -54, 14, -85, -80, -46, -118, -126, 25, 49, -30, -54, 43, 13, -48, 55, 10, 44, -79, -56, 50, 11, 45, -75, -40, -94, -54, 45, 92, -32, -110, -117, 46, 44, -86, -74, 11, 47, -67, -56, -24, -53, 47, 47, 64, 1, 12, 10, -63, 84, 34, -52, 48, -60, 20, 99, -52, 49, 64, -6, -26, 15, 50, 114, -48, -57, 66, 50, -54, -68, -48, -121, 100, 40, 44, -61, -118, 39, -52, 52, -29, -52, 51, -48, 68, 35, 29, 66, 2, 73, -109, 7, 19, -45, 80, 83, -115, 15, -42, -12, 6, 0, 10, -41, 96, -29, 73, 54, -39, 56, -93, -51, 54, -64, -84, 9, -110, 64, -23, 113, 83, 77, 55, -19, 37, -60, -56, 53, -71, 120, -13, 77, -97, -38, -128, 19, 40, 95, 2, 5, 18, -114, 56, -78, 64, -47, 18, 69, -116, -124, 48, 14, 57, -113, 58, 83, -114, 57, -101, 66, 37, -48, 57, -24, -92, 83, 42, -89, -83, -88, -77, 14, 59, 125, -74, 63, -29, 14, 16, -90, 14, -12, -50, -86, 21, 65, -48, 10, 60, -15, -56, -109, -51, 60, -19, -48, 19, -124, 68, -126, 22, -43, -118, 57, -11, -40, -109, -51, 61, -8, -124, -60, 31, 4, -47, -28, -45, -114, 62, -5, -124, 100, -112, 123, 5, 48, -64, 79, 63, -42, 18, -124, 109, -73, 19, 77, 22, 82, 64, 0, 59};
   public static final byte[] ICON_PDF = new byte[]{71, 73, 70, 56, 57, 97, 32, 0, 32, 0, -60, 16, 0, -80, -81, -58, -27, -39, -40, -46, -46, -46, -27, -73, -75, -77, -103, -104, -30, -106, -106, -30, 122, 125, -19, -20, -20, -34, 91, 96, -23, 72, 77, -50, 39, 40, -101, 96, 96, -84, 63, 64, -84, 125, 125, -87, 26, 28, -2, -2, -2, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 33, -7, 4, 1, -24, 3, 16, 0, 44, 0, 0, 0, 0, 32, 0, 32, 0, 0, 5, -1, 32, 36, -114, -92, 8, -100, -24, 89, -82, -20, -104, -66, 111, -37, 6, 2, 45, -36, 3, 64, 8, 48, 32, -109, -127, -96, -16, -122, -85, -11, 126, -112, -127, 114, -55, -28, -43, 2, -57, 86, 97, 58, -104, 90, 13, -122, 65, -19, 16, -116, -106, -104, -43, 37, 22, 81, 120, -46, -96, -80, 82, -126, -118, 53, 88, 17, -119, 53, 81, -112, 67, -57, 70, 10, -60, -126, -127, 104, -12, 17, 12, 10, -126, 6, 54, 57, 59, 94, 10, 14, -127, 14, 10, 123, 12, 12, -116, -126, 5, 67, 55, 4, 61, 62, 16, 12, 9, 124, -100, -128, -98, -113, 3, 66, 52, 57, -105, 34, 4, 13, -88, -87, -86, -88, 59, 1, 92, 65, 55, -91, 7, -81, -94, -75, 65, -77, 92, 92, 116, -105, 0, 15, -72, -65, -64, 7, 74, -82, -71, 52, -68, -64, -66, 7, -55, -66, 1, 6, 8, -60, -81, 60, -105, -63, -72, -55, 92, 112, -48, -77, -46, 61, -54, -43, -56, 92, -50, -39, 93, -45, -63, -66, -42, 7, 88, -63, 118, 48, -44, -65, -52, 88, -39, 7, -37, -20, -18, -77, -42, 15, 3, -50, 3, -64, -21, 49, -19, -65, 5, -36, -112, 89, 98, 44, 74, 57, 123, -62, 16, -116, -127, -109, -128, -52, -68, 20, 34, -22, -31, 10, -112, -113, 76, 1, 37, 4, -80, -108, 41, 21, -79, 94, -128, 2, 8, -56, -36, -46, 70, -60, 11, -124, 92, -65, 6, 46, -124, -100, -92, 110, -36, -99, 17, -63, -14, -79, -92, 86, 16, -30, 10, 87, 56, 41, -122, -102, -107, 115, -56, -53, 21, -68, -126, -94, 64, 34, -108, 23, 18, 19, 69, 127, 30, 77, -118, -23, 40, 11, -114, 63, 66, 0, 0, 59};
   public static final byte[] ICON_CHECK = new byte[]{71, 73, 70, 56, 57, 97, 32, 0, 32, 0, -43, 57, 0, -81, -81, -57, -96, 63, 57, -35, 57, 39, -25, 53, 33, -38, 82, 58, -6, 31, 1, -43, -23, -1, -44, -23, -2, -44, -25, -2, -32, -97, -102, -9, 41, 8, -32, 33, 8, -79, 41, 25, -40, -22, -1, -27, -109, -119, -37, 54, 28, -38, -21, -1, -21, 109, 87, -23, -121, 119, -36, -19, -1, 0, 30, -127, 67, 31, 70, -8, 41, 8, -31, -64, -62, -34, -18, -1, -1, -1, -1, -2, -50, -62, -29, -64, -62, -31, -17, -2, -1, -18, -22, -5, 53, 18, -22, -106, -119, -29, -16, -2, -4, 117, 87, 116, 31, 45, -26, -14, -2, -4, 103, 71, -5, 65, 29, -25, -13, -2, -5, 89, 56, -6, 42, 8, -2, -81, -100, -5, 77, 42, -2, -67, -81, -22, -13, -2, -4, -126, 103, -19, -12, -2, -4, -112, 119, -2, -34, -43, -17, -10, -2, -14, -9, -2, -13, -8, -2, -10, -6, -2, -4, -97, -119, -8, -5, -2, -5, -4, -2, -2, -2, -2, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 33, -7, 4, 1, -24, 3, 57, 0, 44, 0, 0, 0, 0, 32, 0, 32, 0, 0, 6, -1, -64, -100, 112, 72, 20, 2, -114, -56, 99, 113, -55, 28, 38, -97, -49, 102, 19, 74, -115, 74, -99, -43, -84, -14, -86, -19, 2, -92, 94, 47, 51, 12, 13, 8, 6, -55, 34, 57, 73, 40, -72, 11, 86, -95, 97, 78, -81, -45, 15, 8, 68, 66, -15, 94, 48, -30, 13, -127, -126, -125, -124, 13, 14, 111, 15, 89, 66, 16, -116, -115, -114, -113, 17, 111, 18, 90, 66, 19, -106, 20, -104, -103, -102, 20, 21, 110, 22, 23, 19, -108, 0, 24, -92, 20, 25, -89, -88, -88, 26, -98, 27, -92, 94, 28, -80, -90, -87, -88, 29, 30, 110, 31, -80, 28, 94, 32, -68, -78, -77, 25, 33, 110, 34, -68, -68, 94, 35, -57, 20, 29, 36, 26, -87, -85, 5, 37, 20, -57, -57, 94, 38, -43, 20, 39, 5, 40, 41, -88, 42, 110, 43, 20, -43, -43, 94, 44, -28, 20, 36, 111, 45, 25, 43, 110, 36, 25, 20, -28, -28, 94, 46, -13, -90, 47, 111, 39, -35, 5, 48, -18, -13, -13, 94, 49, 0, 101, 105, 64, -15, -90, 64, 59, 119, 0, 1, 118, -55, 33, -93, -95, -81, 14, 37, -34, -84, 56, 69, -95, 97, 67, 74, 57, 102, 104, -12, 117, -22, -100, 7, 84, 20, 52, 106, -60, 72, -93, 36, -57, 83, 53, 94, -128, 44, 89, 18, 99, 14, 27, 54, 54, -55, -60, 4, 19, -90, -94, 33, 55, 114, -22, -36, -55, 115, -25, -51, 35, 33, 56, -126, 10, 29, 74, 84, 104, 21, 38, 69, -109, 14, -91, 2, 102, 13, -108, 43, 57, -100, -90, -127, 26, 85, 42, 85, 34, 100, -82, 78, 97, 10, 53, 8, 0, 59};
   public static final byte[] ICON_UNCHECK = new byte[]{71, 73, 70, 56, 57, 97, 32, 0, 32, 0, -60, 24, 0, -81, -81, -57, -84, -84, -61, -95, -95, -73, -33, -18, -1, -34, -18, -2, -34, -19, -2, -31, -17, -1, -29, -16, -1, -28, -15, -1, 0, 30, -127, -26, -14, -1, -24, -13, -2, -22, -12, -2, -20, -11, -2, -19, -10, -2, -17, -10, -2, -15, -9, -2, -13, -8, -2, -11, -7, -2, -10, -6, -2, -8, -5, -2, -6, -4, -2, -4, -3, -2, -2, -2, -2, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 33, -7, 4, 1, -24, 3, 24, 0, 44, 0, 0, 0, 0, 32, 0, 32, 0, 0, 5, -40, 32, 38, -114, -92, 8, -100, -24, 89, -82, -20, -104, -66, 111, -37, -62, 116, 44, -69, 117, -82, -34, 122, 15, -56, 62, 90, 32, -59, 10, -46, 4, 54, -100, -47, 71, 26, 56, -97, -48, 39, -95, 64, -91, -26, 70, -122, -84, 118, -53, -27, -22, 68, -121, -80, 120, 76, 38, 127, 49, -120, 116, 98, -51, 110, -77, -45, -23, 47, 64, 65, 79, -48, -17, -8, 58, -34, -73, -24, 39, -6, -128, -127, 126, -127, 62, 12, -122, 9, -122, -119, -118, -121, -118, 62, 13, -113, 9, -113, -110, -109, -112, -109, 62, 14, -104, 9, -104, -101, -100, -103, -100, 62, 15, -95, 9, -95, -92, -91, -94, -91, 62, 16, -86, 9, -86, -83, -82, -85, -82, 62, 17, -77, 9, -77, -74, -73, -76, -73, 61, 24, 18, -67, 9, -67, -64, -63, -66, -63, 103, 19, -58, 9, -58, -55, -54, -57, -54, 103, 20, -49, 9, -49, -46, -45, -48, -45, 103, 24, 21, 21, 110, -37, 107, -39, -39, 87, 35, 22, -30, -29, -28, -27, -28, -32, 35, 23, -22, -21, -20, -19, -21, 53, 44, -18, -14, -20, 52, 64, 75, 48, 55, 24, -9, 68, -7, -6, -5, -3, 36, -116, 0, -100, 81, 47, 95, 8, 0, 59};
   public static final byte[] PREVIEW = new byte[]{71, 73, 70, 56, 57, 97, 32, 0, 32, 0, -9, -91, 0, -81, -81, -57, -119, -118, -70, -121, -121, -71, -127, -126, -67, -127, -126, -73, -105, -105, -81, -89, -89, -67, -78, -72, -34, -57, -45, -18, -63, -48, -18, -46, -23, -1, -53, -27, -1, -103, -92, -43, 118, 119, -95, -116, -116, -97, -88, -88, -65, -21, -11, -1, -29, -15, -1, -38, -19, -1, -55, -29, -1, -67, -34, -1, -85, -75, -34, 121, 122, -81, 111, 112, -98, -128, -124, -83, -124, -118, -89, -121, -120, -79, -99, -99, -77, -84, -84, -61, -35, -18, -1, -49, -25, -1, -50, -38, -14, 123, -98, -55, -85, -59, -18, -106, -87, -59, -19, -10, -1, -26, -13, -1, -70, -40, -5, -72, -36, -1, -84, -42, -1, -102, -52, -1, -102, -102, -81, -32, -17, -1, -40, -21, -1, -41, -21, -1, -59, -30, -1, -92, -63, -18, 126, -83, -29, -44, -22, -1, -109, -55, -1, -122, -79, -18, 111, -98, -43, 111, 112, -116, -106, -106, -86, -52, -26, -1, -58, -29, -1, -99, -51, -1, -118, -60, -1, 91, 91, 104, -107, -107, -76, -107, -102, -50, -68, -39, -5, -78, -39, -1, -89, -45, -1, -105, -70, -18, -126, -69, -5, -96, -49, -1, 104, 104, -122, -93, -93, -67, -122, -120, -63, -116, -59, -1, -69, -69, -68, 127, 127, -111, -86, -86, -63, -125, -118, -59, -94, -48, -1, -70, -35, -1, -62, -62, -59, -58, -58, -58, -54, -54, -54, 61, 57, 76, -67, -67, -64, -43, -43, -43, 67, 67, 69, -79, -79, -78, -35, -35, -35, 55, 53, 71, -102, -103, -87, 127, 127, -116, 96, -127, -81, -45, -45, -45, 85, 103, -119, 45, 45, 50, -128, 127, -125, -87, -87, -85, -50, -50, -50, 76, 85, 114, 110, 110, 125, -52, -52, -51, -38, -38, -36, -31, -31, -31, 77, 76, 78, 119, 118, -127, -27, -27, -26, -10, -10, -9, -39, -39, -39, 80, 80, 89, -47, -47, -46, -25, -25, -23, 91, 91, 97, 114, 113, 118, 121, 121, -118, -94, -94, -72, -127, -127, -109, -18, -18, -17, -107, -107, -105, 108, 108, 109, 99, 99, 113, 122, 122, -125, 71, 71, 81, 96, 95, 101, 127, 126, -126, 112, 111, 115, -117, -118, -114, 116, 116, -124, 75, 75, 83, 124, 123, 127, 87, 87, 98, -109, -109, -89, -67, -67, -66, -64, -64, -63, -113, -113, -111, -99, -99, -97, 93, 93, 106, 61, 60, 62, -121, -122, -118, -75, -75, -74, 119, 119, 121, 106, 106, 120, 83, 83, 95, 59, 65, 91, 71, 71, 78, 43, 43, 43, 3, 3, 3, -124, -125, -121, -119, -120, -117, 117, 116, 118, -116, -117, -114, 51, 50, 52, 13, 13, 14, 101, 100, 102, -127, -128, -125, -125, -126, -118, 102, 102, 106, -70, -70, -70, -89, -89, -87, -114, -114, -95, 20, 20, 20, 122, 121, 126, -123, -123, -109, -97, -97, -95, -115, -116, -113, -84, -84, -83, -41, -41, -41, 93, 92, 97, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 33, -7, 4, 1, -24, 3, -91, 0, 44, 0, 0, 0, 0, 32, 0, 32, 0, 0, 8, -1, 0, 75, 9, 28, 72, 80, 32, -128, -125, 8, 15, 22, 92, -56, 112, 96, -62, -121, 15, 27, 54, -124, 72, 49, -94, -60, -127, 1, 4, 12, 24, 64, -96, -128, -127, -118, 22, 37, 30, 64, -112, 64, -63, 2, 6, 13, 28, 60, 0, -103, 80, 34, -124, 8, 18, 20, 76, -96, 80, -63, -62, 5, 12, 25, 52, 52, -40, -64, 1, 36, -61, -105, 29, 60, 124, -88, 0, -126, 65, -120, 10, 21, 66, 28, 16, -95, -31, -62, 6, -97, 4, 71, -112, 8, -6, 0, 68, -123, 18, 38, 78, -96, 16, -111, 52, 65, 2, 17, 13, 82, -12, -92, 72, -112, -124, -118, 21, 0, 64, 28, -112, -64, -94, -59, 9, 23, 47, 68, -72, 8, 17, -30, 107, -40, -118, 3, 9, 124, -112, -16, 33, -124, -120, 15, 36, 96, -108, -120, 33, 99, 6, -120, 23, 115, 19, 32, 16, 65, -93, 6, -34, 82, 26, 42, 40, -88, 32, 34, -124, 13, 9, 55, 112, -28, -112, 33, 3, 68, -27, -70, 9, 14, 100, -48, -79, 18, -94, -64, 29, 60, 122, 80, -10, 97, -62, -57, 15, 32, 65, 98, 8, 113, 81, -63, -85, -41, 15, 32, -122, -108, -114, 8, -128, 72, -111, -76, 64, 78, 8, 1, 34, -61, 8, -118, 31, 39, 14, 28, 9, 65, 82, -15, 1, 36, 14, 64, 38, 81, 34, 34, 3, -112, 37, 57, 94, -60, -2, -31, -125, -55, -47, 38, 78, 66, 60, -1, -15, -38, 0, -54, 88, -118, 26, 64, -128, -72, 46, -29, 69, -116, 37, -84, 67, 28, -119, 114, -29, -125, -108, 16, 77, 18, -48, -104, 114, -2, 33, -121, 29, 32, 88, 39, 68, 16, 65, 0, -31, 2, 0, 34, 80, 33, -62, 17, 79, -64, 80, -59, 13, 79, 84, 64, -125, 21, -69, 37, -60, -63, 21, 88, 100, -112, 5, 16, 64, -128, -112, -123, 103, 34, 68, 17, -126, 22, 85, -108, 104, -61, -125, 0, 108, -63, -123, 88, 16, 117, -31, -59, 23, 72, -128, 17, -58, -121, -98, 53, 33, 70, 2, 99, -112, 65, -58, 24, 95, 124, 113, -94, 8, 97, -108, 97, 6, -117, 9, -99, -127, 6, 26, 105, -88, -79, -123, 8, 47, -128, -26, -43, 19, 33, 56, -79, -58, 24, 108, 40, 32, 70, 6, 109, 80, -31, -58, 27, 112, 60, 116, 36, 26, 35, -120, 17, 7, 87, 46, 52, 17, 2, 0, 34, -90, 113, -122, 4, 36, -56, 49, 6, -112, 83, -52, 65, 71, 29, 41, 68, -12, 101, 26, 71, 100, 16, 7, 8, 0, -124, 80, -123, 13, 103, -40, 0, 3, 25, 108, 124, 32, -126, 29, 119, -32, -111, -121, 30, 58, 56, -122, -112, 64, 108, 104, 33, -59, 23, 82, 68, -79, -121, 8, 9, -40, 96, 3, 25, 10, -100, -40, 67, 19, 34, -16, -47, 71, 27, 126, -52, -111, -57, 31, -128, -76, 84, -118, 19, 71, 4, -46, -124, 32, 94, 12, -21, -126, 5, 32, 33, 30, 16, -123, 8, 34, 16, 18, 71, 33, 83, -12, 97, 8, 33, -124, 28, -14, -121, 3, -25, 13, -124, 8, 21, 94, 16, -30, 7, 30, -119, 36, 82, -120, 34, 121, 100, -127, 69, 24, -117, 48, -46, -120, 35, -113, 60, 2, 44, 36, 109, -60, 81, 26, 65, -125, 16, 50, 72, 36, -110, -32, 17, -55, 36, -119, -40, -111, 8, 29, 116, -76, 65, 73, 37, -39, 102, 107, -55, 37, 120, -88, -127, -60, 71, 0, 20, -108, -120, 31, -104, -124, -111, -55, 36, -121, 92, -110, 72, 25, -17, -58, -5, -120, 35, 116, 104, -78, 73, 34, 109, 20, -62, 73, 18, -7, 46, 100, -121, -88, 109, -48, -47, -119, -63, -39, 34, -84, -55, 19, 28, 63, 33, -56, 32, -98, 124, 2, -121, 68, 106, -76, 49, 8, 40, 6, 107, -36, 113, -57, -126, 108, 18, 74, 36, -112, 92, 84, -54, 36, -96, -96, -84, -78, 24, 61, -82, -79, -122, 19, -94, 12, -110, 71, 38, -106, -12, 33, -77, 64, 115, -96, 43, -118, 20, -93, -92, -111, 70, 21, 95, 80, 49, -120, 36, 109, 52, -46, -56, 34, 117, 12, 77, 16, 23, 116, 12, -94, 69, 26, -102, 60, 77, -118, -44, 127, 40, -126, -123, -43, 13, 121, -110, -56, -41, -115, -124, -115, -60, -48, 1, 1, 0, 59};
   public static final byte[] SETTINGS = new byte[]{71, 73, 70, 56, 57, 97, 32, 0, 32, 0, -9, -5, 0, -81, -81, -57, -90, -90, -67, -104, -106, -90, -108, -112, -100, -83, -83, -59, -99, -100, -79, -111, -115, -102, -114, -119, -107, -105, -107, -89, -88, -88, -65, -113, -124, -123, -92, 126, 76, -84, -126, 68, -117, 121, 107, -110, 112, 67, -92, 119, 56, -79, -125, 63, -88, 121, 53, -121, 109, 78, -106, 124, 98, -41, -90, 91, -22, -72, 109, -65, -112, 78, -65, -113, 72, -39, -89, 89, -25, -76, 102, -57, -108, 72, -113, 110, 66, -109, -111, -94, -93, -94, -72, -104, 120, 83, -31, -82, 96, -1, -44, -109, -13, -64, 114, -27, -78, 101, -22, -73, 106, -19, -70, 108, -43, -94, 84, -89, 122, 57, -116, 104, 56, -125, 106, 77, -127, 121, 123, -114, -122, -118, -111, 114, 75, -85, -128, 67, -29, -80, 98, -1, -46, -113, -5, -56, 122, -18, -69, 109, -79, -128, 55, -126, 94, 48, -108, -109, -91, -99, -101, -81, -116, 114, 84, -74, -120, 67, -30, -81, 98, -11, -62, 116, -6, -57, 122, -41, -92, 86, -62, -113, 66, -120, 90, 22, -122, -125, -113, -84, -84, -61, -86, -86, -62, -117, -124, -119, -111, 108, 56, -47, -97, 82, -1, -45, -110, -10, -61, 118, -15, -66, 112, -77, -128, 51, -101, 111, 47, -60, -108, 76, -17, -68, 110, -36, -87, 91, -87, 119, 42, 123, 82, 22, -123, -125, -112, -86, -86, -63, -113, -128, 121, -109, -112, -97, -95, -95, -73, -127, 117, 111, -110, 104, 44, -58, -109, 69, -7, -58, 120, 125, 93, 48, -76, -120, 71, -23, -74, 104, -108, 99, 24, 106, 77, 38, -120, -121, -104, -101, 125, 90, -49, -100, 78, -53, -103, 79, -104, 118, 75, -122, -127, -119, -123, 104, 70, -101, 108, 39, -89, 116, 39, -71, -122, 57, -33, -84, 94, -3, -54, 125, -99, 109, 36, 102, 79, 49, -118, -119, -102, -92, -92, -69, -79, -120, 77, -62, -111, 68, -102, 112, 53, -90, 118, 46, -51, -102, 77, -74, -125, 54, -48, -99, 79, -65, -116, 63, 125, 80, 15, 121, 119, -125, -82, -127, 61, -59, -109, 72, -1, -35, -86, -29, -80, 100, -9, -60, 118, -19, -69, 113, -67, -118, 61, -60, -111, 67, -127, 88, 28, 125, 123, -119, -1, -51, -126, -61, -112, 66, -78, 127, 50, -76, -127, 52, -73, -124, 55, -66, -117, 62, -90, 119, 51, 108, 90, 70, -113, -113, -94, -1, -38, -93, -1, -48, -118, -40, -91, 87, -53, -104, 74, -114, 91, 14, -70, -120, 61, -121, 90, 23, 102, 91, 85, -106, -106, -85, -1, -49, -121, -1, -44, -107, -1, -52, 127, -124, 81, 3, -110, 95, 17, -96, 109, 31, 114, 74, 16, 99, 90, 86, -104, -104, -83, -21, -72, 107, -88, 123, 57, -48, -97, 85, -92, 113, 37, 118, 74, 7, -55, -106, 73, -98, 107, 30, 124, 75, 2, 101, 69, 24, 103, 98, 101, -102, -102, -81, -106, 99, 22, 105, 68, 13, 81, 63, 41, -114, 102, 45, -47, -96, 86, -105, 100, 23, 117, 76, 17, -50, -94, 96, -125, 80, 3, 101, 66, 13, 91, 76, 61, 121, 120, -121, -98, -98, -76, -34, -85, 93, -112, 95, 20, 82, 64, 40, 68, 66, 70, 110, 83, 47, -78, -122, 68, -27, -75, 110, -122, 84, 6, 103, 63, 5, 84, 67, 46, 116, 116, -126, -110, -110, -89, 108, 80, 42, -66, -110, 82, 119, 71, 0, 122, 73, 0, 106, 64, 0, 80, 62, 38, 101, 100, 113, -117, -117, -98, -120, 85, 7, 98, 59, 0, -113, 92, 14, 112, 67, 0, 127, 75, 0, 96, 72, 41, 108, 107, 120, -82, 123, 45, -117, 88, 10, 101, 60, 0, -95, 110, 33, -1, -39, -97, 115, 69, 0, -123, 82, 4, -93, 112, 35, 121, 87, 43, 114, 112, 125, -118, 87, 9, 110, 67, 0, -85, 120, 43, 121, 71, 0, -121, 102, 57, 105, 63, 0, 93, 56, 0, 119, 117, -127, -101, -101, -80, -1, -27, -65, 75, 45, 0, 126, 76, 0, -1, -16, -38, 119, 72, 0, -81, 124, 46, -1, -17, -39, -107, 115, 71, -78, -127, 56, -37, -87, 92, -1, -34, -82, -1, -22, -53, -1, -42, -103, -1, -25, -59, -107, 116, 72, -125, -127, -112, -90, 122, 60, -61, -107, 80, -56, -103, 84, -57, -104, 83, -59, -105, 82, -70, -116, 72, -119, 106, 68, 119, 115, 125, 122, 117, 127, 125, 121, -125, -120, -121, -105, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 33, -7, 4, 1, -24, 3, -5, 0, 44, 0, 0, 0, 0, 32, 0, 32, 0, 0, 8, -1, 0, -9, 9, 28, 72, 80, 32, -128, -125, 8, 15, 22, 92, -56, 112, 96, -62, -121, 15, 27, 54, -124, 72, 49, -94, 68, -121, 21, 51, 42, -68, -88, -79, 35, 0, -119, 16, 3, 8, 24, 64, -96, -128, -127, 3, 7, 16, 36, -88, -56, 48, -92, -126, 5, 12, 26, 56, 120, 0, 33, -126, 4, 4, 4, 88, 18, -92, 88, 96, 2, -123, 10, 22, 46, 96, -56, -96, 97, 3, 7, 2, 57, 41, -18, 124, -40, -31, -128, -121, 15, 32, 66, -120, 24, 65, -94, -124, -119, 19, 40, 82, -84, -124, -120, -15, -95, -118, 21, 44, 90, -72, 120, 17, 2, 70, -120, 12, 37, 52, -60, -112, 49, 35, -87, 69, -120, 52, 106, -40, -72, -127, 35, 7, 14, 29, 67, 97, -64, 104, -79, -125, 71, 15, 31, 74, -9, 1, -8, -47, -95, -125, 15, 2, 64, -126, 8, 25, 50, -124, 72, 17, 35, 71, -112, 100, 72, -94, 100, 9, -109, 38, 78, -108, 2, 112, 34, -32, -55, 19, 40, 81, -92, 76, -95, -110, 36, 71, -107, 16, 59, -84, 92, -63, 82, -92, 68, 22, 45, 91, 18, -72, 125, 40, -128, 75, 23, 47, 95, -64, -124, 17, 51, -122, 76, 25, 51, 47, 68, -108, 17, -111, -92, -120, -114, 51, 104, -46, -88, -103, -99, 80, -59, -102, 27, 57, -40, -76, 113, -13, 70, 3, -100, 56, 47, 94, -28, 32, -78, -99, 68, 25, 57, 115, -24, 116, -1, 96, 126, -112, 69, 29, 59, 36, -18, 20, -95, -128, 39, -49, 7, 13, 37, -80, 124, -48, 83, -124, -124, -112, 61, 124, -40, -12, -15, 19, 5, 41, 68, 44, 55, 100, 64, -60, 31, -89, -31, 80, 69, 11, -128, 4, 34, -120, 17, -125, -108, 80, 6, 33, -126, -20, 80, -120, 33, -121, 68, 1, 24, 68, -120, 16, -8, 66, 34, -119, -4, -15, 66, 21, 36, 40, -78, 8, 21, -127, 48, -78, 4, 25, -127, 52, 34, -121, 35, -113, 64, -46, 31, 121, -111, 72, 50, 73, 34, 102, -112, 80, 68, 30, 47, -32, 0, -61, 8, 31, -112, 65, 73, 37, 99, -64, 49, -120, 37, -105, 96, -110, 73, 127, 20, 105, -14, -57, 31, 102, 116, 17, -56, 38, -100, 36, -127, 67, 8, 85, 117, -30, -119, 27, -97, 0, 2, 74, 40, -94, -116, 66, -54, 114, 74, 77, 50, -119, 8, -91, -104, 114, 10, 42, -87, 100, 48, -126, 38, -117, -88, -78, 10, 43, 122, 12, -46, -118, 43, -81, -64, 18, -117, 26, -127, 77, -14, -126, 44, -77, -48, 82, -117, 45, -73, -20, -96, 1, 22, 45, 104, 0, 1, 46, -115, -28, -94, -53, 46, -68, -12, 18, 69, 0, -127, 85, -111, -61, 8, -124, -20, -31, -53, 47, -97, 48, 2, 12, 40, 59, 80, -79, 7, 40, -63, 8, 51, 12, 49, -59, 100, 18, -128, 19, -28, 13, 84, 69, 21, 35, 96, 64, -63, 8, 124, 24, -59, 115, 12, 35, -118, -4, 81, 6, 50, -55, 40, -77, 12, 51, -67, -60, -30, -60, -123, 9, 17, -108, 71, 30, 56, 20, 81, 68, 8, 113, 52, -29, -52, 51, -48, 68, 51, -120, 52, -45, 80, 83, -115, 53, 46, 30, -58, 21, 65, 56, -32, 64, 68, 30, 85, 8, -111, -54, 34, -41, 96, -109, -115, 54, -55, 8, 34, -60, 54, -68, 124, 25, 88, 65, -58, -110, 48, -62, 34, 55, -104, -63, 7, 55, -49, 116, 83, -54, 7, 73, 108, -32, -51, 55, 96, 6, -37, 80, 5, 37, -68, -79, -121, 8, -32, -68, 0, 77, 56, -30, 80, 1, -126, 25, 14, -48, 81, 0, -98, -2, 74, 20, 8, 25, 100, -120, 48, -50, 56, 88, -112, 83, 14, 14, -26, -72, 112, -114, 31, -79, 108, -75, -47, 69, -5, -72, -127, 78, 58, -22, -84, -125, 8, 33, 101, -80, -45, 78, 21, -18, -68, -93, -122, -56, 36, 23, 4, 79, 60, -14, -52, 19, -113, 5, -12, -52, 83, -113, 61, 105, 4, -16, -61, 71, 53, 55, 116, -49, -47, -8, -32, -109, -113, 62, 5, -44, 28, 16, 0, 59};
   private static BookModel bookModel;

   public static void setBookModel(BookModel var0) {
      bookModel = var0;
   }

   public Utils(BookModel var1) {
      bookModel = var1;
   }

   public BufferedImage createImage(int var1, int var2, int var3) {
      BufferedImage var4 = new BufferedImage(var1, var2, var3);
      return var4;
   }

   public Graphics createGraphics(int var1, int var2) {
      BufferedImage var3 = new BufferedImage(var1, var2, 1);
      Graphics2D var4 = var3.createGraphics();
      return var4;
   }

   public Vector getMetadataV(int var1) throws Exception {
      Vector var2 = new Vector();
      int[] var3 = (int[])((int[])((Elem)bookModel.cc.get(var1)).getEtc().get("pagecounts"));
      String var4 = ((Elem)bookModel.cc.get(var1)).getType();

      for(int var5 = 0; var5 < var3.length; ++var5) {
         PageModel var6 = bookModel.get(var4).get(var5);
         int var7 = var3[var5];
         boolean var8 = true;
         boolean var9 = true;
         boolean var10 = true;

         for(int var11 = 0; var11 < var7; ++var11) {
            Hashtable var12 = (Hashtable)bookModel.getPageMetas(var4).get(var6.pid);
            if (var12 != null) {
               try {
                  if (((String)var12.get("printable")).equalsIgnoreCase("false")) {
                     var8 = false;
                     var10 = false;
                  }
               } catch (Exception var16) {
                  Tools.eLog(var16, 0);
               }
            }

            Dimension var13 = new Dimension(Integer.parseInt((String)var6.xmlht.get("maxx")), Integer.parseInt((String)var6.xmlht.get("maxy")));
            boolean var14 = var6.xmlht.get("main_page").equals("igen");
            boolean var15 = var6.xmlht.containsKey("only_in_browser");
            var2.add(new LapMetaAdat(var6.title, var6.title, var6.pid, var6.orientation == 0, var8, var9, var11, var6.y_sorted_df, var6.dynamic, var6.psize, var13, var7, var5, var4, var10, var12.get("printable_condition"), var14, var15));
         }
      }

      return var2;
   }

   public static void needPrint(Lap var0, IDataStore var1, String var2) {
      var0.getLma().setNyomtatando(false);
      Vector var4 = var0.getLma().adatNevek;

      for(int var5 = 0; var5 < var4.size(); ++var5) {
         DataFieldModel var6 = (DataFieldModel)var4.get(var5);
         String var7 = var1.get("0_" + var6.key);
         if (var7 == null || "".equals(var7.trim())) {
            if (var6.getKp_force() != DataFieldModel.KpForceType.empty) {
               continue;
            }

            var7 = "";
         }

         try {
            if ("false".equalsIgnoreCase(var7) && "check".equals(var6.features.get("datatype"))) {
               if (var6.getKp_force() != DataFieldModel.KpForceType.empty) {
                  continue;
               }

               var7 = "";
            }
         } catch (Exception var9) {
            continue;
         }

         Hashtable var8 = var6.features;
         MezoMetaAdatok var3 = MezoMetaAdatok.getInstance();
         mezoMetaAdatokFeltoltese(var3, var8);
         if ((!MezoMetaAdatok.copy_fld || var6.getKp_force() == DataFieldModel.KpForceType.copy && var7.length() > 0) && !MezoMetaAdatok.notinbrhead && !MezoMetaAdatok.notinbarkod) {
            var0.getLma().setNyomtatando(true);
            break;
         }
      }

   }

   public static void mezoMetaAdatokFeltoltese(MezoMetaAdatok var0, Hashtable var1) {
      try {
         if (var1.get("copy_fld") != null) {
            MezoMetaAdatok.copy_fld = !var1.get("copy_fld").equals("");
         }
      } catch (Exception var10) {
         Tools.eLog(var10, 0);
      }

      try {
         if (var1.get("print_on_flp") != null) {
            MezoMetaAdatok.print_on_flp = Boolean.valueOf((String)var1.get("print_on_flp"));
         }
      } catch (Exception var9) {
         Tools.eLog(var9, 0);
      }

      try {
         if (var1.get("fill_on_fp") != null) {
            MezoMetaAdatok.fill_on_fp = Boolean.valueOf((String)var1.get("fill_on_fp"));
         }
      } catch (Exception var8) {
         Tools.eLog(var8, 0);
      }

      try {
         if (var1.get("fill_on_lp") != null) {
            MezoMetaAdatok.fill_on_lp = Boolean.valueOf((String)var1.get("fill_on_lp"));
         }
      } catch (Exception var7) {
         Tools.eLog(var7, 0);
      }

      try {
         if (var1.get("calc") != null) {
            MezoMetaAdatok.szamitott = Boolean.valueOf((String)var1.get("calc"));
         }
      } catch (Exception var6) {
         Tools.eLog(var6, 0);
      }

      try {
         if (var1.get("office_fill") != null) {
            MezoMetaAdatok.office_fill = Boolean.valueOf((String)var1.get("office_fill"));
         }
      } catch (Exception var5) {
         Tools.eLog(var5, 0);
      }

      try {
         if (var1.get("notinbarkod") != null) {
            MezoMetaAdatok.notinbarkod = true;
         }
      } catch (Exception var4) {
         Tools.eLog(var4, 0);
      }

      try {
         if (var1.get("DPageNumber") != null) {
            MezoMetaAdatok.notinbrhead = true;
         }
      } catch (Exception var3) {
         Tools.eLog(var3, 0);
      }

   }

   public boolean fieldInCPrint(String var1, Hashtable var2, boolean var3, boolean var4) {
      MezoMetaAdatok var5 = MezoMetaAdatok.getInstance();
      if (var1.equals("true")) {
         var1 = "X";
      }

      if (var1.equals("false") && ((String)var2.get("datatype")).equalsIgnoreCase("check")) {
         return true;
      } else {
         mezoMetaAdatokFeltoltese(var5, var2);
         boolean[] var6 = this.mezoKellEABarkodba(var5, var1, var3, var4);
         return var6[0];
      }
   }

   private boolean[] mezoKellEABarkodba(MezoMetaAdatok var1, Object var2, boolean var3, boolean var4) {
      boolean[] var5 = new boolean[]{true, true};
      if (var2 == null) {
         var5[0] = false;
         var5[1] = false;
      } else if (var2.equals("")) {
         var5[0] = false;
         var5[1] = false;
      } else if (MezoMetaAdatok.office_fill) {
         var5[0] = false;
         var5[1] = false;
      } else {
         var5[0] = !MezoMetaAdatok.notinbrhead;
         var5[1] = !MezoMetaAdatok.notinbarkod;
         if (!MezoMetaAdatok.notinbarkod) {
            if (MezoMetaAdatok.print_on_flp) {
               if (var4 && MezoMetaAdatok.fill_on_lp || var3 && MezoMetaAdatok.fill_on_fp) {
                  var5[0] = !MezoMetaAdatok.copy_fld && !MezoMetaAdatok.notinbrhead;
               } else {
                  var5[0] = false;
               }
            } else {
               var5[0] = !MezoMetaAdatok.copy_fld && !MezoMetaAdatok.notinbrhead;
            }
         }
      }

      return var5;
   }
}
